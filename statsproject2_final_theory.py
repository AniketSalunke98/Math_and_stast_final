# -*- coding: utf-8 -*-
"""StatsProject2_final_theory.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19blXFF21APVkoCkK8_tRZDTnc-4giE-1
"""

# Commented out IPython magic to ensure Python compatibility.

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

# Load the dataset

dv=pd.read_excel('sample-superstore-subset-excel.xlsx')


# Display the first few rows and summary statistics

dv.head(10)
dv.describe(include='all')

"""1. **Data Handling**:

**How would you handle missing values in a dataset? Describe at leas two methods**
"""

# Handle missing values
#1)isnull Method

dv.isnull().sum()  #showing  All missing valuses in data set

dv.dtypes

#Product Base Margin column all null values is replace

product_Base_margen=dv['Product Base Margin'].median()
product_Base_margen

#2)replace Method

dv['Product Base Margin']=dv['Product Base Margin'].replace(np.nan,product_Base_margen)

dv.isnull().sum()

"""**○ Explain why it might be necessary to convert data types before performing an analysis**





---> convert data type the main role in data analysis.if data set present data in interger format. if we want to float data type so we can convert data type in float essily.
"""

dv.dtypes #check data type in present dataset

# Convert data types

change_datatype={'Quantity ordered new':float}
dv=dv.astype(change_datatype)
dv.dtypes

# Create any new columns needed for analysis
dv['Total_Price']=dv['Unit Price'] + dv['Shipping Cost']
dv

"""2. **Statistical Analysis:**

○ **What is a T-test, and in what scenarios would you use it? Provide an example based on sales data.**



T test is used to determine a significant difference between mean of two groups.
and also perform in t-test is p-value and t-statistic.
"""

from scipy.stats import ttest_ind, chi2_contingency

# Example: T-test for sales in different regions

#selecting Region column
resion=dv['Region']

#selecting sales column
sales=dv['Sales']

# Perform t-test for east west region

t_statistic, p_value = ttest_ind(sales[resion == 'East'], sales[resion == 'West'])

print(f"T-statistic: {t_statistic}, P-value: {p_value}")

"""2)Describe the Chi-square test for independence and explain when it should be used. How would you apply it to test the relationship between shipping mode and customer segment?

**3.Univariate and Bivariate Analysis:**

○ **What is univariate analysis, and what are its key purposes?**




 In this univariate analysis only one variable is present in the graph.
 and use univariate analysis measurment and observation  in single variable.

* Key roles of univariate analysis:
1)No relationship:- in univariate analysis no relation ship in other variable.
2)Descriptive Statistics:-in Descriptive Statistics mesure of central tendancy mean,mode,median and mesures of despersion range and standard deviation.
3)visualization in univariate analysis:-histogram and box plot.
"""

# Univariate analysis
dv=pd.read_excel('sample-superstore-subset-excel.xlsx')
plt.title('Distribution of Sales')
sns.histplot(dv['Sales'])
plt.xlabel('Sales')
plt.ylabel('Count')
plt.show()

# Univariate analysis
dv=pd.read_excel('sample-superstore-subset-excel.xlsx')
plt.title('Count of orders by Region')
sns.countplot(x='Region',data=dv)
plt.ylabel('count')
plt.show()

"""**Explain the difference between univariate and bivariate analysis. Provide an example of each.**




**univariate analysis**:-
1) A single variable present in univariate analysis.
2)his not relationship between other column.
3)univariate analysis use central tendancy mean,mode,median.
4)it use despersion range and standard deviation.
5)used graph in univariate analysis bar chart,histogram and pie chart.


**bivariate analysis**:-
1)two single variable present in bivariate analysis.
2)his perform relationship between other column.
3)bivariate analysis use of two variable simultaneously.
4)bivariate analysis use correlation of two variable.
5)used graph in bivariate analysis scatter plot, bar chart.

"""

# Bivariate analysis
dv=pd.read_excel('sample-superstore-subset-excel.xlsx')
plt.title('Sales vs Profit')
sns.scatterplot(x='Sales',y='Profit',data=dv)
plt.show()

# Bivariate analysis
dv=pd.read_excel('sample-superstore-subset-excel.xlsx')
plt.title('Sales by Region')
sns.boxplot(x='Region',y='Sales',data=dv)
plt.show()

"""**4. Data Visualization:**

○ **What are the benefits of using a correlation matrix in data analysis? How would you interpret the results?**


1)correlation matrix is use to evaluate the relation between two or more variable in the dataset.
2)the matrix is performing relationship between every row and every column.
3) in correlation type is positive correlation, negative correlation and no correlation.
4)correlation matrix are shows all positive values in matrix format.
5)used to correlation matrix to analyse large dataset.
"""

# Selecting only numeric columns for correlation matrix
plt.title('Correlation Matrix')
number_col=dv.select_dtypes(include=[np.number])
sns.heatmap(number_col.corr(),cmap='coolwarm',annot=True,annot_kws={'size': 5})
plt.show()

"""**How would you plot sales trends over time using a dataset? Describe the steps and tools you would use.**

"""

#plotting sales trend over time.

# read the data set
dv=pd.read_excel('sample-superstore-subset-excel.xlsx')

#set date time format

dv['Order Date']=pd.to_datetime(dv['Order Date'])

# order date column set as a index
dv.set_index('Order Date',inplace=True)

# resample sales data by month

month_sales=dv['Sales'].resample('M').sum()

# plot sales trend over time

plt.figure(figsize=(15,8))

#creating plot

month_sales.plot(kind='line',marker='o',color='b',linestyle='-')

plt.title('Monthly sales trend')

plt.xlabel('Date')

plt.ylabel('Sales')

plt.grid(True)

plt.tight_layout()

plt.xticks(rotation=45)

plt.show()

# Plotting profit trends over time

dv=pd.read_excel('sample-superstore-subset-excel.xlsx')

#set date time format

dv['Order Date']=pd.to_datetime(dv['Order Date'])


dv.set_index('Order Date',inplace=True)

# resample sales data by month

month_profit=dv['Profit'].resample('M').sum()

#show graph

plt.figure(figsize=(15,8))



month_profit.plot(kind='line',marker='o',color='r',linestyle='-')

plt.title('Monthly profit trend')

plt.xlabel('Date')

plt.ylabel('Profit')

plt.grid(True)

plt.tight_layout()

plt.xticks(rotation=45)

plt.show()

"""**5. Sales and Profit Analysis:-**

**How can you identify top-performing product categories based on total sales and profit? Describe the process.**
"""

# Plotting total profit by product category

dv=pd.read_excel('sample-superstore-subset-excel.xlsx')

#Create Sales column to numeric

dv['Sales']=pd.to_numeric(dv['Sales'],errors='coerce')

categories_col='Product Category'

# Calculate total sales by product category

category_sales = dv.groupby(categories_col)['Sales'].sum().reset_index()

category_sales = category_sales.sort_values(by='Sales', ascending=False)

# Create a bar plot

sns.set(style="whitegrid")


plt.figure(figsize=(18, 9))

sns.barplot(data=category_sales, x=categories_col, y='Sales', palette='viridis')


plt.title('Total Sales by Product Category')

plt.xlabel('Product Category')

plt.ylabel('Total Sales')

plt.xticks(rotation=45)

plt.show()

# Plotting total profit by product category

dv=pd.read_excel('sample-superstore-subset-excel.xlsx')

#Create profit column to numeric

dv['Profit']=pd.to_numeric(dv['Profit'],errors='coerce')



category_col = 'Product Category'  #this to the correct column name

# Calculate total Profit by product category

category_profit = dv.groupby(category_col)['Profit'].sum().reset_index()


category_profit = category_profit.sort_values(by='Profit', ascending=False)


sns.set(style='whitegrid')

# Create bar plot for total sales by category

plt.figure(figsize=(13, 6))

sns.barplot(data=category_profit, x=category_col, y='Profit', palette='viridis')

#  titles Names and labels

plt.title('Total Profit by Product Category')

plt.xlabel('Product Category')

plt.ylabel('Total Profit')

plt.xticks(rotation=45)

plt.show()

""" **Explain how you would analyze seasonal sales trends using historical sales data.**"""

# Analyzing seasonal sales trends

# Grouping sales data by month and year
dv=pd.read_excel('sample-superstore-subset-excel.xlsx')
dv['Order Date']=pd.to_datetime(dv['Order Date'])
dv['Month']=dv['Order Date'].dt.month
dv['Year']=dv['Order Date'].dt.year
dv.head(5)

# Plotting seasonal sales trends
correlation = dv[['Month', 'Year']].corr()
plt.figure(figsize=(10, 6))
sns.heatmap(correlation, annot=True, cmap='coolwarm')
plt.title('seasonal sales trends')
plt.show()

"""**6. Grouped Statistics:**

**Why is it important to calculate grouped statistics for key variables? Provide an example using regional sales data.**
"""

# Summary statistics for key variables

dv=pd.read_excel('sample-superstore-subset-excel.xlsx')
dv.describe()

# Grouped statistics

dv=pd.read_excel('sample-superstore-subset-excel.xlsx')

dv.groupby('Region')['Sales'].mean()

"""### Conclusion

- Summary of key findings.
- Insights based on the analysis.

## Additional Statistical Analysis
"""

# Generating summary statistics for each region

summary=dv.groupby('Region').describe()



# Display summary statistics

summary

# Visualizing the correlation between sales and profit

dv=pd.read_excel('sample-superstore-subset-excel.xlsx')

dv.plot(kind='scatter',x='Sales',y='Profit')

plt.title('Correlation between Sales and Profit')

# Displaying the correlation coefficient

plt.show()

# Comparing sales across different ship modes

dv=pd.read_excel('sample-superstore-subset-excel.xlsx')

sales_by_ship_mode = dv.groupby('Ship Mode')['Sales'].sum()


sales_by_ship_mode

# perform graph of shipping mode

sns.set_style('whitegrid')

plt.figure(figsize=(10,6))

sns.barplot(x=sales_by_ship_mode.index,y=sales_by_ship_mode.values,color='Skyblue')

plt.title('Total Sales by Shipping Mode')

plt.xlabel('Shipping Mode')

plt.ylabel('Total Sales')

plt.show()